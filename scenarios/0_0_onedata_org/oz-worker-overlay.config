[
    {oz_worker, [
        {external_ip, "149.156.11.33"},

        %% DNS config

        % Static mappings from onezone subdomain to list of ips.
        % Full domain will be based on http_domain as set in this config
        % file.
        % The subdomain must be a binary and must not begin or end
        % with the dot character.
        % Example:
        % {static_entries, [
        %     {<<"example-subdomain">>, [{10,0,0,1}, {10,0,0,2}]}
        % ]}
        {dns_static_a_records, [
            {<<"docker">>, [{149, 156, 11, 25}]},
            {<<"packages">>, [{149, 156, 11, 26}]}, % new from cloud.plgrid
            {<<"get">>, [{149, 156, 11, 26}]},
            {<<"p-cyfro">>, [{90, 147, 102, 179}]},
            {<<"p-lab">>, [{90, 147, 102, 178}]},
            {<<"ns1.beta">>, [{90, 147, 102, 149}]},
            {<<"ns2.beta">>, [{90, 147, 102, 149}]},
            {<<"ns.dev">>, [{149, 156, 10, 221}]},
            {<<"ns.k8s-cyf.dev">>, [{149, 156, 10, 221}]}
        ]},

        % Static ns entries. Each tuple should contain a subdomain name
        % and a list of nameserver domains.
        % Example:
        % {dns_static_ns_records, [
        %     {<<"example-subdomain">>, [
        %         <<"ns1.example-subdomain.onezone.org">>
        %     ]}
        % ]}
        {dns_static_ns_records, [
            {<<"beta">>, [
                <<"ns1.beta.onedata.org">>,
                <<"ns2.beta.onedata.org">>
            ]},
            {<<"dev">>, [
                <<"ns.dev.onedata.org">>
            ]},
            {<<"k8s-cyf.dev">>, [
                <<"ns.k8s-cyf.dev.onedata.org">>
            ]}
        ]},

        % Static mx entries. Each tuple should contain a subdomain,
        % email server name and preference (integer).
        % Example:
        % {dns_static_mx_records, [
        %     {<<"">>, <<"mail.onezone.org">>, 10}
        % ]}
        {dns_static_mx_records, [
            {<<"">>, <<"ASPMX.L.GOOGLE.COM">>, 1},
            {<<"">>, <<"ALT1.ASPMX.L.GOOGLE.COM">>, 5},
            {<<"">>, <<"ALT2.ASPMX.L.GOOGLE.COM">>, 5},
            {<<"">>, <<"ALT3.ASPMX.L.GOOGLE.COM">>, 10},
            {<<"">>, <<"ALT4.ASPMX.L.GOOGLE.COM">>, 10}
        ]},

        % Static txt entries. Each tuple should contain a name and content.
        % Both name and content should be a binary.
        % Example:
        % {dns_static_txt_records, [
        %     {<<"record-name">>, <<"record-value">>}
        % ]}
        {dns_static_txt_records, [
            {<<"">>, <<"v=spf1 include:_spf.google.com ~all">>}
        ]},

        %% SOA record parameters
        % Nameserver admin mailbox
        {dns_soa_admin_mailbox, "info.onedata.org"},
        % This value must be incremented on every update of this config file
        {dns_soa_serial, 2018080601},

        % legacy format of DNS config present below SHOULD BE REMOVED
        % after UPGRADING to 18.02.0-rc11 or develop
        {dns, [
            % Static mappings from onezone subdomain to list of ips.
            % Full domain will be based on http_domain as set in this config
            % file.
            % The subdomain must be a binary and must not begin or end
            % with the dot character.
            % Example:
            % {static_entries, [
            %     {<<"example-subdomain">>, [{10,0,0,1}, {10,0,0,2}]}
            % ]}
            {static_a_records, [
                {<<"docker">>, [{149, 156, 11, 25}]},
                {<<"packages">>, [{149, 156, 11, 26}]}, % new from cloud.plgrid
                {<<"get">>, [{149, 156, 11, 26}]},
                {<<"p-cyfro">>, [{90, 147, 102, 179}]},
                {<<"p-lab">>, [{90, 147, 102, 178}]},
                {<<"ns1.beta">>, [{90, 147, 102, 149}]},
                {<<"ns2.beta">>, [{90, 147, 102, 149}]}
            ]},

            % Static ns entries. Each tuple should contain a subdomain name
            % and a list of nameserver domains.
            % Example:
            % {static_ns_records, [
            %     {<<"example-subdomain">>, [
            %         <<"ns1.example-subdomain.onezone.org">>
            %     ]}
            % ]}
            {static_ns_records, [
                {<<"beta">>, [
                    <<"ns1.beta.onedata.org">>,
                    <<"ns2.beta.onedata.org">>
                ]}
            ]},

            % Static mx entries. Each tuple should contain a subdomain,
            % email server name and preference (integer).
            % Example:
            % {static_mx_records, [
            %     {<<"">>, <<"mail.onezone.org">>, 10}
            % ]}
            {static_mx_records, [
                {<<"">>, <<"ASPMX.L.GOOGLE.COM">>, 1},
                {<<"">>, <<"ALT1.ASPMX.L.GOOGLE.COM">>, 5},
                {<<"">>, <<"ALT2.ASPMX.L.GOOGLE.COM">>, 5},
                {<<"">>, <<"ALT3.ASPMX.L.GOOGLE.COM">>, 10},
                {<<"">>, <<"ALT4.ASPMX.L.GOOGLE.COM">>, 10}
            ]},

            % Static txt entries. Each tuple should contain a name and content.
            % Both name and content should be a binary.
            % Example:
            % {static_txt_records, [
            %     {<<"record-name">>, <<"record-value">>}
            % ]}
            {static_txt_records, [
                {<<"">>, <<"v=spf1 include:_spf.google.com ~all">>}
            ]},

            % maximum number of ips to be presented as subdomain
            % ns1, ns2, ns3 etc. in NS records
            {ns_max_entries, 10},

            % minimum number of resolved nsX domains. If the number specified
            % is higher than number of oz_worker nodes, some domains will resolve
            % to the same IP address. Must not be higher than ns_max_entries
            % Use this option if your domain registrar enforces
            % a minimum number of Nameserver addresses.
            {ns_min_entries, 2},

            %% SOA record parameters
            % Nameserver admin mailbox
            {soa_admin_mailbox, "info.onedata.org"},
            % This value must be incremented on every update of this config file
            {soa_serial, 2018080601},
            % Time interval before the zone should be refreshed
            {soa_refresh, 7200},
            % Time interval that should elapse before a failed refresh should be retried
            {soa_retry, 1800},
            % Time value that specifies the upper limit on the time interval that
            % can elapse before the zone is no longer authoritative
            {soa_expire, 1209600},
            % Time a NAME ERROR = NXDOMAIN result may be cached by any resolver
            {soa_minimum, 120},

            {a_ttl, 120},
            {ns_ttl, 120},
            {soa_ttl, 120},
            {txt_ttl, 120},
            {mx_ttl, 3600}
        ]}
    ]}
].
