version: '2.0'

services:
  node1.oneprovider:
    image: onedata/oneprovider:19.02.0-beta1
    container_name: oneprovider-1
    hostname: node1
    domainname: oneprovider
    # dns: 8.8.8.8 # uncomment if container can't ping any domain
    extra_hosts:
      - "node1.oneprovider:127.0.1.1"
    # No port forwarding and better netowrk performance
    network_mode: host
    volumes:
        - "/var/run/docker.sock:/var/run/docker.sock"
        # configuration persistence
        - "${ONEPROVIDER_CONFIG_DIR}:/volumes/persistence"
        # data persistence
        - "${ONEPROVIDER_DATA_DIR}:/volumes/storage"
        # Server SSL certificates
        #- "${OP_PRIV_KEY_PATH}:/etc/op_panel/certs/web_key.pem"
        #- "${OP_CERT_PATH}:/etc/op_panel/certs/web_cert.pem"
        #- "${OP_CHAIN_PATH}:/etc/op_panel/certs/web_chain.pem"
        # Additional, trusted CA certificates (any filename is accepted)
        #- "${OP_CACERTS_PATH}:/etc/op_panel/cacerts/customCaBundle.pem"
    ulimits:
      # No core dumps created by rtransfer. TODO: Should be removed in the future.
      core: 0
      # For couchbase file limit to work on centos 7
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    environment:
      #ONEPANEL_DEBUG_MODE: "true" # prevents container exit on configuration error
      ONEPANEL_LOG_LEVEL: "none" # prints logs to stdout (possible values: none, debug, info, error), by default set to info
      ONEPANEL_BATCH_MODE: "true"
      # If enabled, a new web cert will be generated with CN matching the
      #   ONEPANEL_GENERATED_CERT_DOMAIN and signed by OnedataTestWebServerCa
      # NOTE: The generation will be performed upon every startup, any
      #   existing certs will be backed up and placed in the same directory.
      # WARNING: This functionality is devised for test purposes and must not
      #   be used in production.
      ONEPANEL_GENERATE_TEST_WEB_CERT: "false"  # default: false
      # The generated test web cert will be issued for below domain.
      ONEPANEL_GENERATED_CERT_DOMAIN: "node1.oneprovider"  # default: ""
      # If enabled, onepanel will trust any server that has a cert signed by
      #   the OnedataTestWebServerCa.
      # WARNING: This functionality is devised for test purposes and must not
      #   be used in production.
      ONEPANEL_TRUST_TEST_CA: "false"  # default: false
      # Default password to access onepanel emergency interface
      ONEPANEL_EMERGENCY_PASSPHRASE: "password"
      ONEPROVIDER_CONFIG: |
        cluster:
          domainName: "oneprovider"
          nodes:
            n1:
              hostname: "node1"
          managers:
            mainNode: "n1"
            nodes:
              - "n1"
          workers:
            nodes:
              - "n1"
          databases:
            # Per node Couchbase cache size in MB for all buckets
            serverQuota: 4096
            # Per bucket Couchbase cache size in MB across the cluster
            bucketQuota: 1024
            nodes:
              - "n1"
          storages:
            NFS:
              type: "posix"
              mountPoint: "/volumes/storage"
        oneprovider:
          register: true
          name: "${PROVIDER_NAME}"
          # "false" in subdomainDelegation means that provider admin
          #         manages its DNS on its own and provider is available
          #         under the domain given in "domain" field
          # "true" means provider is using a subdomain given in "subdomain"
          #        config field which is registered under the onezone domain
          #        given in a config in the onezone domain
          # Note that for subdomainDelegation "true" to work onezone with
          # properly configured DNS zone delegation and external IP is needed.
          # This onezone setup is not covered by the getting-started scenarios.
          subdomainDelegation: false
          domain: "${PROVIDER_FQDN}" # OR IP ADDRESS
          redirectionPoint: "${PROVIDER_FQDN}" # OR IP ADDRESS
          # Oneprovider Registration token acquired in runtime from Onezone
          token: "${PROVIDER_REGISTRATION_TOKEN}"
          adminEmail: "getting-started@onedata.org"
          geoLatitude: ${GEO_LATITUDE}
          geoLongitude: ${GEO_LONGITUDE}
        onezone:
          domainName: "${ZONE_FQDN}" # OR IP ADDRESS